name: account
table:  account
fields:
- id ?
- bank_id
- billing_account
- currency * 3 =

name: account_details
extends: account
fields:
- bank.code
- bank.name
- billing_account 64 = 'Account = ' || billing_account

name:    type_override_test
table:   account
fields:
- bank                   = bank_id
- last_modified            date          : Last modified

name:    type_override_test_2
table:   test_table4
comments:
fields:
- int_col_as_string string 10 = int_col
- decimal266_col_mod      8 2 = decimal266_col8

name:     cardinality_overide_test
table:    person
fields:
- name    ?
- surname !

name: bank_list_row
table: bank
fields:
- id
- code
- country_code (LT LV RU)
- country.name
- name         : <p>special xml 'chars' & "strings" test</p>

name: person
table: person
fields:
- name
- surname
- mother.name
- father.name
- maternal_grandmother_name    = mother.mother.name
- maternal_grandfather_name    = mother.father.name
- maternal_grandfather_surname = mother.father.surname
- father.mother.name
- father.father.name
- father.father.father.surname

name: no_table
table:
fields:
- some_id   :
- some_name : ''
- some_date : ' '
- some_date_time:
  - comments (with extra) for some_date_time
  - extra-for-some-date-time: some-date-time
  - some-other-extra-for-some-date-time
- is_boolean
- is_boolean_expr =
- is_not_boolean date : should be date

name:   no_fields
table:  bank
fields: []

name:    no_fields_extended_with_fields
extends: no_fields
fields:
- id
- code
- name
- country.name

name:   no_fields_b
table:  bank
fields:

name:    no_fields_extended_b
extends: no_fields_b
fields:
- id

name:   one_fielder
table:
fields: the_one
extra: some extra

name:   with_scala_keywords
table:
fields:
- this  =
- super =
- new   =
- true  =
- lazy  =
- null  =
- case  =
- final =
- type  =
- type_ =

name:   with_many_known_keys
table:  bank b
save-to:
- bank
- account
comments:
- some comments
joins:
- b/account a
- b/country c
fields:
- id
- code
- name
filter:
- name
- code
group:
- name
having:
- count(*) = 1
order:
- name
- 1

name: with_join_to_parent
table:  person c
fields:
- id
- name
- parents * [p.id in (c.mother_id, c.father_id)] :
    table: person p
    fields:
    - id
    - name

name: with_join_to_parent_plus
table:  person c
fields:
- id
- name
- parents + [p.id in (c.mother_id, c.father_id)] :
    table: person p
    fields:
    - id
    - name

name: with_child_save_options
table:  country
fields:
- code
- name
- bank [+-=] * :
    table: bank
    fields:
    - id
    - code
    - name

name: with_child_order_by_asc
table:  country
fields:
- code
- "bank * #(name)" :
    table: bank
    fields:
    - name

name: with_child_order_by_desc
table:  country
fields:
- code
- bank * ~#(name) :
    table: bank
    fields:
    - name

name: with_anonymous_inline_view
table:
fields:
- some_id
- some_name
- some_children *:
    table:
    fields:
    - child_id
    - child_name

name: with_named_inline_view
table:
fields:
- some_id
- some_name
- some_children *:
    name: named_inline_view
    table:
    fields:
    - child_id
    - child_name

name: with_named_inline_view2
table:
fields:
- some_children * named_inline_view2:
    table:
    fields:
    - child_name

name: with_named_inline_view3
table:
fields:
- single_child named_inline_view3:
    table:
    fields:
    - child_name

name: with_empty_child_save_to
table:
save-to:
- table1
- table2
fields:
- single_child:
    table:
    save-to:
    fields:
    - child_name

name: with_child_extends
table:
fields:
- code
- name
- bank * :
    table:
    fields:
    - id
    - code
    - name

name: with_child_extends_crud1
table: country
extends: with_child_extends
fields:
- bank * :
    table: bank
    extends: with_child_extends_bank
    fields:
    - extra =

name: with_child_extends_crud2
table: country
extends: with_child_extends
fields:
- extra =
- bank * :
    table: bank
    extends: with_child_extends_bank

name: with_child_extends_crud3
table: country
extends: with_child_extends
fields:
- extra =
- bank * [true] with_child_extends_bank


name: resolver_test_1
table: person
fields:
- id
- mother = mother.name || mother.surname -> mother_id
- father = father.name || father.surname -> father_id = person[name || surname = _]{id}

name: resolver_test_2
comments: ""
table: account_currency
fields:
- account = account.billing_account -> account_id
- currency.name -> currency_code
- account.bank.code
- account.bank.name_eng

name: resolver_test_3
comments: " "
table: account
fields:
- id
- code = -> bank_id

name: resolver_test_4
table: bank
fields:
- id
- name -> = 'My bank'

name: resolver_test_5
table: bank
fields:
- id
- name -> = _ || ' saved'

name: resolver_test_6
table: bank
fields:
- id
- name = name || '.' ->

name: resolver_test_7
table: bank b
fields:
- id
- name ->
- country = country.name ->

name: resolver_test_7b
table: bank b
fields:
- id
- country = country.name -> = to_country_code(_)

name: resolver_test_8
table: account
fields:
- id
- bank = bank.name ->

name: resolver_test_8b
table: account a_
fields:
- id
- a_.bank_id -> = 33

name: resolver_test_9
table: person
fields:
- id
- mother = mother.name || mother.surname ->
- father = father.name || ' ' || father.surname ->
