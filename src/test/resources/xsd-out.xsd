<xs:schema version="1.0" targetNamespace="kps.ldz.lv" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="kps.ldz.lv">
  <xs:complexType name="AccountType">
    <xs:annotation>
      <xs:documentation>Klienta norēķina konts</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Id" nillable="true" minOccurs="0" type="xs:long">
        <xs:annotation>
          <xs:documentation>Ieraksta identifikators.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BankId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Bankas ID, sasaiste ar Bankas.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BillingAccount">
        <xs:annotation>
          <xs:documentation>Norēķinu konts.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Currency" minOccurs="0" maxOccurs="unbounded">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="3"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AccountDetailsType">
    <xs:annotation>
      <xs:documentation>Klienta norēķina konts</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:AccountType">
        <xs:sequence>
          <xs:element name="BankCode">
            <xs:annotation>
              <xs:documentation>Bankas SWIFT kods.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
                <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
                <xs:maxLength value="16"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element name="BankName">
            <xs:annotation>
              <xs:documentation>Bankas pilnais nosaukums.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
                <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
                <xs:maxLength value="240"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BankListRowType">
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
        <xs:annotation>
          <xs:documentation>Ieraksta identifikators.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Code">
        <xs:annotation>
          <xs:documentation>Bankas SWIFT kods.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="16"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="CountryCode" nillable="true" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Bankas valsts, izvēle no klasifikatora.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="2"/>
            <xs:enumeration value="LT"/>
            <xs:enumeration value="LV"/>
            <xs:enumeration value="RU"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="CountryName" nillable="true" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valsts nosaukums.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Name">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;special xml 'chars' &amp; "strings" test&lt;/p&gt;</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="240"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CardinalityOverideTestType">
    <xs:sequence>
      <xs:element name="Name" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="51"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Surname">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="52"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="NamedInlineViewType">
    <xs:sequence>
      <xs:element name="ChildId" nillable="true" minOccurs="0" type="xs:long">
      </xs:element>
      <xs:element name="ChildName" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="NamedInlineView2Type">
    <xs:sequence>
      <xs:element name="ChildName" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="NamedInlineView3Type">
    <xs:sequence>
      <xs:element name="ChildName" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="NoFieldsType">
    <xs:sequence>
      
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="NoFieldsBType">
    <xs:sequence>
      
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="NoFieldsExtendedBType">
    <xs:complexContent>
      <xs:extension base="tns:NoFieldsBType">
        <xs:sequence>
          <xs:element name="Id" type="xs:long">
            <xs:annotation>
              <xs:documentation>Ieraksta identifikators.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NoFieldsExtendedWithFieldsType">
    <xs:complexContent>
      <xs:extension base="tns:NoFieldsType">
        <xs:sequence>
          <xs:element name="Id" type="xs:long">
            <xs:annotation>
              <xs:documentation>Ieraksta identifikators.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Code">
            <xs:annotation>
              <xs:documentation>Bankas SWIFT kods.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
                <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
                <xs:maxLength value="16"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element name="Name">
            <xs:annotation>
              <xs:documentation>Bankas pilnais nosaukums.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
                <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
                <xs:maxLength value="240"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element name="CountryName" nillable="true" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Valsts nosaukums.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:maxLength value="64"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NoTableType">
    <xs:sequence>
      <xs:element name="SomeId" nillable="true" minOccurs="0" type="xs:long">
      </xs:element>
      <xs:element name="SomeName" nillable="true" minOccurs="0" type="xs:string">
        <xs:annotation>
          <xs:documentation></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SomeDate" nillable="true" minOccurs="0" type="xs:date">
        <xs:annotation>
          <xs:documentation> </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SomeDateTime" nillable="true" minOccurs="0" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>comments (with extra) for some_date_time</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="IsBoolean" nillable="true" minOccurs="0" type="xs:boolean">
      </xs:element>
      <xs:element name="IsBooleanExpr" nillable="true" minOccurs="0" type="xs:boolean">
      </xs:element>
      <xs:element name="IsNotBoolean" nillable="true" minOccurs="0" type="xs:date">
        <xs:annotation>
          <xs:documentation>should be date</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OneFielderType">
    <xs:sequence>
      <xs:element name="TheOne" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PersonType">
    <xs:sequence>
      <xs:element name="Name">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="51"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Surname" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="52"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="MotherName" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="51"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="FatherName" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="51"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="MaternalGrandmotherName" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="51"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="MaternalGrandfatherName" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="51"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="MaternalGrandfatherSurname" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="52"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="FatherMotherName" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="51"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="FatherFatherName" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="51"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="FatherFatherFatherSurname" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="52"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResolverTest1Type">
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
      </xs:element>
      <xs:element name="Mother" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
      <xs:element name="Father" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResolverTest2Type">
    <xs:annotation>
      <xs:documentation></xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Account">
        <xs:annotation>
          <xs:documentation>Norēķinu konts.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="CurrencyName">
        <xs:annotation>
          <xs:documentation>Valūtas nosaukums.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="100"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="AccountBankCode">
        <xs:annotation>
          <xs:documentation>Bankas SWIFT kods.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="16"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="AccountBankNameEng" nillable="true" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Bankas pilnais nosaukums, angliski.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="240"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResolverTest3Type">
    <xs:annotation>
      <xs:documentation> </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
        <xs:annotation>
          <xs:documentation>Ieraksta identifikators.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Code" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResolverTest4Type">
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
        <xs:annotation>
          <xs:documentation>Ieraksta identifikators.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Name">
        <xs:annotation>
          <xs:documentation>Bankas pilnais nosaukums.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="240"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResolverTest5Type">
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
        <xs:annotation>
          <xs:documentation>Ieraksta identifikators.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Name">
        <xs:annotation>
          <xs:documentation>Bankas pilnais nosaukums.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="240"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResolverTest6Type">
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
        <xs:annotation>
          <xs:documentation>Ieraksta identifikators.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Name" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResolverTest7Type">
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
        <xs:annotation>
          <xs:documentation>Ieraksta identifikators.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Name">
        <xs:annotation>
          <xs:documentation>Bankas pilnais nosaukums.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="240"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Country" nillable="true" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valsts nosaukums.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResolverTest7bType">
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
        <xs:annotation>
          <xs:documentation>Ieraksta identifikators.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Country" nillable="true" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Valsts nosaukums.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResolverTest8Type">
    <xs:annotation>
      <xs:documentation>Klienta norēķina konts</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
        <xs:annotation>
          <xs:documentation>Ieraksta identifikators.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Bank">
        <xs:annotation>
          <xs:documentation>Bankas pilnais nosaukums.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="240"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResolverTest8bType">
    <xs:annotation>
      <xs:documentation>Klienta norēķina konts</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
        <xs:annotation>
          <xs:documentation>Ieraksta identifikators.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BankId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Bankas ID, sasaiste ar Bankas.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResolverTest9Type">
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
      </xs:element>
      <xs:element name="Mother" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
      <xs:element name="Father" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SchemaTest1Type">
    <xs:sequence>
      <xs:element name="T1Id" nillable="true" minOccurs="0" type="xs:long">
      </xs:element>
      <xs:element name="T1Name" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="50"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SchemaTest2Type">
    <xs:sequence>
      <xs:element name="Id" nillable="true" minOccurs="0" type="xs:long">
      </xs:element>
      <xs:element name="TestSchema1TestTable1Name" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="50"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SchemaTest3Type">
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
      </xs:element>
      <xs:element name="Name" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="50"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TypeOverrideTestType">
    <xs:annotation>
      <xs:documentation>Klienta norēķina konts</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Bank" type="xs:long">
        <xs:annotation>
          <xs:documentation>Bankas ID, sasaiste ar Bankas.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="LastModified" type="xs:date">
        <xs:annotation>
          <xs:documentation>Last modified</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TypeOverrideTest2Type">
    <xs:annotation>
      <xs:documentation></xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="IntColAsString" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="10"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Decimal266ColMod" nillable="true" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:decimal">
            <xs:totalDigits value="8"/>
            <xs:maxExclusive value="1000000"/>
            <xs:fractionDigits value="2"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithAnonymousInlineViewType">
    <xs:sequence>
      <xs:element name="SomeId" nillable="true" minOccurs="0" type="xs:long">
      </xs:element>
      <xs:element name="SomeName" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
      <xs:element name="SomeChildren" minOccurs="0" maxOccurs="unbounded" type="tns:WithAnonymousInlineViewSomeChildrenType">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithAnonymousInlineViewSomeChildrenType">
    <xs:sequence>
      <xs:element name="ChildId" nillable="true" minOccurs="0" type="xs:long">
      </xs:element>
      <xs:element name="ChildName" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithChildExtendsType">
    <xs:sequence>
      <xs:element name="Code" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
      <xs:element name="Name" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
      <xs:element name="Bank" minOccurs="0" maxOccurs="unbounded" type="tns:WithChildExtendsBankType">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithChildExtendsBankType">
    <xs:sequence>
      <xs:element name="Id" nillable="true" minOccurs="0" type="xs:long">
      </xs:element>
      <xs:element name="Code" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
      <xs:element name="Name" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithChildExtendsCrud1Type">
    <xs:annotation>
      <xs:documentation>Valstu klasifikators</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:WithChildExtendsType">
        <xs:sequence>
          
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="WithChildExtendsCrud1BankType">
    <xs:complexContent>
      <xs:extension base="tns:WithChildExtendsBankType">
        <xs:sequence>
          <xs:element name="Extra" nillable="true" minOccurs="0" type="xs:string">
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="WithChildExtendsCrud2Type">
    <xs:annotation>
      <xs:documentation>Valstu klasifikators</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:WithChildExtendsType">
        <xs:sequence>
          <xs:element name="Extra" nillable="true" minOccurs="0" type="xs:string">
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="WithChildExtendsCrud2BankType">
    <xs:complexContent>
      <xs:extension base="tns:WithChildExtendsBankType">
        <xs:sequence>
          
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="WithChildExtendsCrud3Type">
    <xs:annotation>
      <xs:documentation>Valstu klasifikators</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="tns:WithChildExtendsType">
        <xs:sequence>
          <xs:element name="Extra" nillable="true" minOccurs="0" type="xs:string">
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="WithChildOrderByAscType">
    <xs:annotation>
      <xs:documentation>Valstu klasifikators</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Code">
        <xs:annotation>
          <xs:documentation>ISO 3166-1 divu burtu valsts kods</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="2"/>
            <xs:enumeration value="LV"/>
            <xs:enumeration value="TO"/>
            <xs:enumeration value="LT"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Bank" minOccurs="0" maxOccurs="unbounded" type="tns:WithChildOrderByAscBankType">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithChildOrderByAscBankType">
    <xs:sequence>
      <xs:element name="Name">
        <xs:annotation>
          <xs:documentation>Bankas pilnais nosaukums.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="240"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithChildOrderByDescType">
    <xs:annotation>
      <xs:documentation>Valstu klasifikators</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Code">
        <xs:annotation>
          <xs:documentation>ISO 3166-1 divu burtu valsts kods</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="2"/>
            <xs:enumeration value="LV"/>
            <xs:enumeration value="TO"/>
            <xs:enumeration value="LT"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Bank" minOccurs="0" maxOccurs="unbounded" type="tns:WithChildOrderByDescBankType">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithChildOrderByDescBankType">
    <xs:sequence>
      <xs:element name="Name">
        <xs:annotation>
          <xs:documentation>Bankas pilnais nosaukums.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="240"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithChildSaveOptionsType">
    <xs:annotation>
      <xs:documentation>Valstu klasifikators</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Code">
        <xs:annotation>
          <xs:documentation>ISO 3166-1 divu burtu valsts kods</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="2"/>
            <xs:enumeration value="LV"/>
            <xs:enumeration value="TO"/>
            <xs:enumeration value="LT"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Name">
        <xs:annotation>
          <xs:documentation>Valsts nosaukums.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Bank" minOccurs="0" maxOccurs="unbounded" type="tns:WithChildSaveOptionsBankType">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithChildSaveOptionsBankType">
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
        <xs:annotation>
          <xs:documentation>Ieraksta identifikators.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Code">
        <xs:annotation>
          <xs:documentation>Bankas SWIFT kods.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="16"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Name">
        <xs:annotation>
          <xs:documentation>Bankas pilnais nosaukums.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="240"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithEmptyChildSaveToType">
    <xs:sequence>
      <xs:element name="SingleChild" nillable="true" minOccurs="0" type="tns:WithEmptyChildSaveToSingleChildType">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithEmptyChildSaveToSingleChildType">
    <xs:sequence>
      <xs:element name="ChildName" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithJoinToParentType">
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
      </xs:element>
      <xs:element name="Name">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="51"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Parents" minOccurs="0" maxOccurs="unbounded" type="tns:WithJoinToParentParentsType">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithJoinToParentParentsType">
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
      </xs:element>
      <xs:element name="Name">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="51"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithJoinToParentPlusType">
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
      </xs:element>
      <xs:element name="Name">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="51"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Parents" maxOccurs="unbounded" type="tns:WithJoinToParentPlusParentsType">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithJoinToParentPlusParentsType">
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
      </xs:element>
      <xs:element name="Name">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="51"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithManyKnownKeysType">
    <xs:annotation>
      <xs:documentation>some comments</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Id" type="xs:long">
        <xs:annotation>
          <xs:documentation>Ieraksta identifikators.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Code">
        <xs:annotation>
          <xs:documentation>Bankas SWIFT kods.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="16"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Name">
        <xs:annotation>
          <xs:documentation>Bankas pilnais nosaukums.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value="[\s\S]*[\S][\s\S]*"/>
            <xs:maxLength value="240"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithNamedInlineViewType">
    <xs:sequence>
      <xs:element name="SomeId" nillable="true" minOccurs="0" type="xs:long">
      </xs:element>
      <xs:element name="SomeName" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
      <xs:element name="SomeChildren" minOccurs="0" maxOccurs="unbounded" type="tns:NamedInlineViewType">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithNamedInlineView2Type">
    <xs:sequence>
      <xs:element name="SomeChildren" minOccurs="0" maxOccurs="unbounded" type="tns:NamedInlineView2Type">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithNamedInlineView3Type">
    <xs:sequence>
      <xs:element name="SingleChild" nillable="true" minOccurs="0" type="tns:NamedInlineView3Type">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="WithScalaKeywordsType">
    <xs:sequence>
      <xs:element name="This" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
      <xs:element name="Super" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
      <xs:element name="New" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
      <xs:element name="True" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
      <xs:element name="Lazy" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
      <xs:element name="Null" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
      <xs:element name="Case" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
      <xs:element name="Final" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
      <xs:element name="Type" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
      <xs:element name="Type_" nillable="true" minOccurs="0" type="xs:string">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ListWrapperType">
    <xs:sequence>
      <xs:element type="xs:int" name="Count"/>
      <xs:element type="xs:int" minOccurs="0" name="Limit"/>
      <xs:element type="xs:int" minOccurs="0" name="Offset"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BankListWrapperType">
    <xs:complexContent>
      <xs:extension base="tns:ListWrapperType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" nillable="true" type="tns:BankListRowType" name="Bank"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>